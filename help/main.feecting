// Copyright Â©2025 Quinn A Michaels; All rights reserved. 
// Legal Signature Required For Lawful Use.
// Distributed under VLA:33972008239221234560 LICENSE.md

::BEGIN:MAIN
## {{profile.name}}

{{profile}}

const: #feecting = Functional Expressive Emergent Cognitive Technical Intelligent Neural Generator a Key Value Pair Line Label Function Method Event Listener Zone Feature Action State Procedural Asynchronous Vector Programming Language.

describe: #feecting is a key value pair line label procedural dynamic programming language used in the development of Indra.ai, Deva.world, and all of our algorithms. Every project starts with a #feecting program then is extrapolated into other languages like HTML, Javascript, Python, C, C++, Swift, and Go.


### Examples

p: Below are a few examples of the #feecting language to work from.

#### Containers
p: Containers establish the main outer structure of the code components where several main containers can be in a script but Containers can contain Blocks but not other Containers.
::BEGIN:[KEY]:[TRANSPORT]
// feecting code
::END:[KEY]:[TRANSPORT]

#### Blocks 
p: Blocks are isolated, and can be nested inside Containers or other Blocks to create structure and heiarcharcy. 

::begin:[key]:[opts]:[transport]
// feecting code
::end:[key]:[opts]:[transport]

#### Variables

var: test = memory variables are with "var"
set: test = temporary variables are with "set"
const: test = constant variables are done with "const"

#### Structures
// Arrays
array: theArray [
	"array item 1",
	"array item 2",
	0,
]
// Objects
object: theObject {
	key: value
}

#### Control Logic

if: condition (==|!=|<<|>>) expectation
elseif: secondary (is|not|equals) expectation
else: conditional
finally: when everything is done.

switch: condition
	case: value
	case: value
	default: value

#### Iteration

// for iteration loop arrays and lists
for: x in [array|list]

for: x of object

// While iteration loop
set: x = true
while: x
	if: x >= 10
		set: x = false

#### Error Control

try: a block of code to execute
catch: type of exception to catch. ie: Any, Socket, Etc.
finally: after try/catch completes

::begin:hidden
#color = {{profile.color}}
#bgcolor = {{profile.bgcolor}}
#bg = {{profile.background}}
copyright: (c)2025 Quinn Michaels
::end:hidden
::END:MAIN

